<?php
// $Id$
require_once('general_deletion.inc');
require_once('email.inc');

/**
 * Implementation of hook_menu().
 */
function om_flowsheet_menu()
{
	$items = array();
	/* PROPOSAL */
	$items['chemical/flowsheeting-project/proposal'] = array(
		'title' => 'Flowsheet Proposal Form',
		'description' => 'Flowsheet Proposal Form Proposal Form',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_proposal_form'
		),
		'access arguments' => array(
			'om flowsheet create proposal'
		),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'proposal.inc'
	);
	$items['chemical/flowsheeting-project/manage-proposal'] = array(
		'title' => 'Manage Flowsheet Proposals',
		'description' => 'Manage Flowsheet Proposals',
		'page callback' => 'om_flowsheet_proposal_pending',
		'access callback' => 'user_access',
		'access arguments' => array(
			'om flowsheet manage proposal'
		),
		'file' => 'manage_proposal.inc'
	);
	$items['chemical/flowsheeting-project/manage-proposal/pending'] = array(
		'title' => 'Pending Proposals',
		'description' => 'Pending om flowsheet Proposals Queue',
		'page callback' => 'om_flowsheet_proposal_pending',
		'access callback' => 'user_access',
		'access arguments' => array(
			'om flowsheet manage proposal'
		),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => 1,
		'file' => 'manage_proposal.inc'
	);
	$items['chemical/flowsheeting-project/manage-proposal/all'] = array(
		'title' => 'All Proposals',
		'description' => 'All Proposals',
		'page callback' => 'om_flowsheet_proposal_all',
		'access callback' => 'user_access',
		'access arguments' => array(
			'om flowsheet manage proposal'
		),
		'type' => MENU_LOCAL_TASK,
		'weight' => 4,
		'file' => 'manage_proposal.inc'
	);
	$items['chemical/flowsheeting-project/manage-proposal/approve'] = array(
		'title' => 'Approve Proposal',
		'description' => 'Approve Proposal',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_proposal_approval_form'
		),
		'access arguments' => array(
			'om flowsheet manage proposal'
		),
		'type' => MENU_CALLBACK,
		'file' => 'manage_proposal.inc'
	);
	$items['chemical/flowsheeting-project/manage-proposal/solution-proposal-approve'] = array(
		'title' => 'Approve Solution Proposal',
		'description' => 'Approve Solution Proposal',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_solution_proposal_approval_form'
		),
		'access arguments' => array(
			'om flowsheet manage proposal'
		),
		'type' => MENU_CALLBACK,
		'file' => 'manage_solution_proposal.inc'
	);
	$items['chemical/flowsheeting-project/manage-proposal/edit'] = array(
		'title' => 'Edit Proposal',
		'description' => 'Edit Proposal',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_proposal_edit_form'
		),
		'access arguments' => array(
			'om flowsheet manage proposal'
		),
		'type' => MENU_CALLBACK,
		'file' => 'manage_proposal.inc'
	);
	$items['chemical/flowsheeting-project/manage-proposal/status'] = array(
		'title' => 'Proposal Status',
		'description' => 'Proposal Status',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_proposal_status_form'
		),
		'access arguments' => array(
			'om flowsheet approve proposal'
		),
		'type' => MENU_CALLBACK,
		'file' => 'manage_proposal.inc'
	);
	$items['chemical/flowsheeting-project/show-proposal'] = array(
		'title' => 'om flowsheet Solution Proposal',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_solution_proposal_form'
		),
		'access arguments' => array(
			'om flowsheet propose solution'
		),
		'type' => MENU_CALLBACK,
		'file' => 'solution_proposal.inc'
	);
	/* CODE REVIEW */
	$items['chemical/flowsheeting-project/code-approval'] = array(
		'title' => 'LM Manage Code Approval',
		'description' => 'Manage Code Approval',
		'page callback' => 'om_flowsheet_code_approval',
		'access arguments' => array(
			'om flowsheet approve code'
		),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'code_approval.inc'
	);
	$items['chemical/flowsheeting-project/abstract-approval/approve'] = array(
		'title' => 'Code Approval',
		'description' => 'Code Approval',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_abstract_approval_form'
		),
		'access arguments' => array(
			'om flowsheet approve code'
		),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => 1,
		'file' => 'code_approval.inc'
	);
	$items['chemical/flowsheeting-project/abstract-approval/bulk'] = array(
		'title' => 'Bulk Manage',
		'description' => 'Bulk Mangage',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_abstract_bulk_approval_form'
		),
		'access arguments' => array(
			'om flowsheet bulk manage abstract'
		),
		'type' => MENU_LOCAL_TASK,
		'weight' => 2,
		'file' => 'abstract_bulk_approval.inc'
	);
	$items['chemical/flowsheeting-project/code-approval/bulk'] = array(
		'title' => 'Bulk Manage',
		'description' => 'Bulk Mangage',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_bulk_approval_form'
		),
		'access arguments' => array(
			'om flowsheet bulk manage abstract'
		),
		'type' => MENU_LOCAL_TASK,
		'weight' => 2,
		'file' => 'bulk_approval.inc'
	);
	$items['chemical/flowsheeting-project/code-approval/upload'] = array(
		'title' => 'Upload Code',
		'description' => 'Admin Upload',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_bulk_upload_code_form'
		),
		'access arguments' => array(
			'om flowsheet bulk manage abstract'
		),
		'type' => MENU_CALLBACK,
		'weight' => 4,
		'file' => 'bulk_upload_code.inc'
	);
	$items['chemical/flowsheeting-project/code-approval/notes'] = array(
		'title' => 'Notes for Reviewers',
		'description' => 'Notes for Reviewers',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_lab_notes_form'
		),
		'access arguments' => array(
			'om flowsheet bulk manage abstract'
		),
		'type' => MENU_CALLBACK,
		'weight' => 4,
		'file' => 'notes.inc'
	);
	/* CODE UPLOAD */
	$items['chemical/flowsheeting-project/abstract-code'] = array(
		'title' => 'Abstract and Flowsheet Submission',
		'description' => 'Abstract Submission',
		'page callback' => 'om_flowsheet_abstract',
		'access callback' => 'user_access',
		'access arguments' => array(
			'om flowsheet upload code'
		),
		'file' => 'upload_code.inc'
	);
	$items['chemical/flowsheeting-project/abstract-code/flowsheet-project-list'] = array(
		'title' => 'Flowsheet project',
		'description' => 'List Experiments',
		'page callback' => 'om_flowsheet_abstract',
		'access arguments' => array(
			'om flowsheet upload code'
		),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'file' => 'upload_code.inc',
		'weight' => 1
	);
	$items['chemical/flowsheeting-project/abstract-code/upload'] = array(
		'title' => 'Abstract and Flowsheet Submission',
		'description' => 'Abstract Submission',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_upload_abstract_code_form'
		),
		'access arguments' => array(
			'om flowsheet upload code'
		),
		'type' => MENU_LOCAL_TASK,
		'file' => 'upload_code.inc',
		'weight' => 2
	);
	$items['chemical/flowsheeting-project/abstract-code/delete'] = array(
		'title' => 'Delete Solution',
		'description' => 'Delete Solution',
		'page callback' => 'om_flowsheet_upload_code_delete',
		'access arguments' => array(
			'om flowsheet upload code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'upload_code_delete.inc'
	);
	/* CODE DOWNLOADS */
	$items['chemical/flowsheeting-project/download/file'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'om_flowsheet_download_solution_file',
		'access arguments' => array(
			'om flowsheet download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	$items['chemical/flowsheeting-project/download/solution'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'om_flowsheet_download_solution',
		'access arguments' => array(
			'om flowsheet download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	$items['chemical/flowsheeting-project/download/experiment'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'om_flowsheet_download_experiment',
		'access arguments' => array(
			'om flowsheet download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	$items['chemical/flowsheeting-project/download/lab'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'om_flowsheet_download_lab',
		'access arguments' => array(
			'om flowsheet download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	$items['chemical/flowsheeting-project/full-download/experiment'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'om_flowsheet_download_full_experiment',
		'access arguments' => array(
			'om flowsheet approve code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'full_download.inc'
	);
	$items['chemical/flowsheeting-project/full-download/project'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'om_flowsheet_download_full_project',
		'access arguments' => array(
			'om flowsheet download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'full_download.inc'
	);
	/* COMPLETED om flowsheetS */
	$items['chemical/flowsheeting-project/completed-flowsheet'] = array(
		'title' => 'Completed Flowsheets',
		'page callback' => 'om_flowsheet_completed_proposals_all',
		'access arguments' => array(
			'om flowsheet download code'
		),
		'file' => 'flowsheet_details.inc'
	);
	/* LABS IN PROGRESS */
	$items['chemical/flowsheeting-project/flowsheet-progress'] = array(
		'title' => 'Flowsheets in Progress',
		'page callback' => 'om_flowsheet_progress_all',
		'access arguments' => array(
			'om flowsheet download code'
		),
		'file' => 'flowsheet_details.inc'
	);
	/* DOWNLOAD FOR EVERYONE */
	$items['chemical/flowsheeting-project/om-flowsheet-run'] = array(
		'title' => 'Download Codes',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_run_form'
		),
		'access arguments' => array(
			'om flowsheet download code'
		),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'run.inc'
	);
	$items['chemical/flowsheeting-project/download/user-defined-compound-file'] = array(
		'title' => 'Download user defined compound file',
		'description' => 'Download user defined compound',
		'page callback' => 'om_flowsheet_download_user_defined_compound',
		'access arguments' => array(
			'download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	/* LATEX SCRIPT */
	$items['chemical/flowsheeting-project/generate-lab'] = array(
		'title' => 'Generate Lab',
		'description' => 'Generate Lab From Latex Script',
		'page callback' => 'om_flowsheet_download_lab_pdf',
		'access arguments' => array(
			'om flowsheet generate lab'
		),
		'type' => MENU_CALLBACK,
		'file' => 'latex.inc'
	);
	$items['chemical/flowsheeting-project/delete-lab'] = array(
		'title' => 'Delete Lab PDF',
		'description' => 'Delete Lab PDF',
		'page callback' => 'om_flowsheet_delete_lab_pdf',
		'access arguments' => array(
			'om flowsheet approve code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'latex.inc'
	);
	/* ADMIN SETTINGS */
	$items['admin/settings/om-flowsheet'] = array(
		'title' => 'om flowsheet Settings',
		'description' => 'om flowsheet Settings',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'om_flowsheet_settings_form'
		),
		'access arguments' => array(
			'administer om flowsheet'
		),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'settings.inc'
	);
	/* AJAX REQUEST */
	$items["lab-bulk-manage-exp/ajax"] = array(
		"title" => "Ajax callbacks",
		"page callback" => "lab_bulk_manage_exp_ajax",
		"access arguments" => array(
			"om flowsheet bulk manage abstract"
		),
		"type" => MENU_CALLBACK,
		'file' => 'bulk_approval.inc'
	);
	$items['chemical/flowsheeting-project/certificates'] = array(
		'title' => 'List of Flowsheet Certificates',
		'description' => 'List of flowsheet Certificates',
		'page callback' => '_list_flowsheet_certificates',
		'access arguments' => array(
			'list flowsheet certificates'
		),
		'file' => 'pdf/list_flowsheet_certificate.inc'
	);
	$items['chemical/flowsheeting-project/certificates/generate-pdf'] = array(
		'title' => 'Download Certificate',
		'description' => 'Download Certificate',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'generate_pdf'
		),
		'type' => MENU_CALLBACK,
		'access arguments' => array(
			'generate pdf'
		),
		'file' => 'pdf/cert_new.inc'
	);
	$items['chemical/flowsheeting-project/certificates-custom'] = array(
		'title' => 'List of Flowsheet Custom Certificates',
		'description' => 'List of flowsheet Custom Certificates',
		'page callback' => '_list_flowsheet_custom_certificates',
		'access arguments' => array(
			'list flowsheet custom certificates'
		),
		'file' => 'pdf/list_mentor_certificates.inc'
	);
	$items['chemical/flowsheeting-project/certificates-custom/pdf'] = array(
		'title' => 'Download Certificate',
		'description' => 'Download Certificate',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'generate_pdf'
		),
		'type' => MENU_CALLBACK,
		'access arguments' => array(
			'generate pdf'
		),
		'file' => 'pdf/mentor_cert_pdf.inc'
	);
	$items["chemical/flowsheeting-project/certificates/verify"] = array(
		"title" => "Certificate Verification",
		"page callback" => "verify_certificates",
		"access arguments" => array(
			"verify certificates"
		),
		'type' => MENU_CALLBACK,
		'file' => 'pdf/verify_certificates.inc'
	);
	return $items;
}
/**
 * Implementation of hook_perm().
 */
function om_flowsheet_permission()
{
	return array(
		'om flowsheet create proposal' => array(
			'title' => t('om flowsheet create proposal'),
			'restrict access' => TRUE
		),
		'om flowsheet manage proposal' => array(
			'title' => t('om flowsheet manage proposal'),
			'restrict access' => TRUE
		),
		'om flowsheet edit proposal' => array(
			'title' => t('om flowsheet edit proposal'),
			'restrict access' => TRUE
		),
		'om flowsheet approve proposal' => array(
			'title' => t('om flowsheet approve proposal'),
			'restrict access' => TRUE
		),
		'om flowsheet propose solution' => array(
			'title' => t('om flowsheet propose solution'),
			'restrict access' => TRUE
		),
		'om flowsheet approve abstract' => array(
			'title' => t('om flowsheet approve code'),
			'restrict access' => TRUE
		),
		'om flowsheet bulk manage abstract' => array(
			'title' => t('om flowsheet bulk manage abstract'),
			'restrict access' => TRUE
		),
		'om flowsheet bulk delete code' => array(
			'title' => t('om flowsheet bulk delete code'),
			'restrict access' => TRUE
		),
		'om flowsheet upload code' => array(
			'title' => t('om flowsheet upload code'),
			'restrict access' => TRUE
		),
		'om flowsheet download code' => array(
			'title' => t('om flowsheet download code'),
			'restrict access' => TRUE
		),
		'administer om flowsheet' => array(
			'title' => t('administer om flowsheet'),
			'restrict access' => TRUE
		),
		'om flowsheet generate abstract' => array(
			'title' => t('om flowsheet generate abstract'),
			'restrict access' => TRUE
		),
		"list flowsheet certificates" => array(
			"title" => t("list flowsheet certificates"),
			"description" => t("Allows users to list flowsheet certificates.")
		),
		"list flowsheet custom certificates" => array(
			"title" => t("list flowsheet custom certificates"),
			"description" => t("Allows users to list flowsheet custom certificates.")
		),
		"generate pdf" => array(
			"title" => t("Generate pdf"),
			"description" => t("Allows users to Generate pdf.")
		)
	);
	// return array('om flowsheet create proposal', 'om flowsheet manage proposal', 'om flowsheet edit proposal', 'om flowsheet approve proposal', 'om flowsheet propose solution', 'om flowsheet approve code', 'om flowsheet bulk manage abstract', 'om flowsheet bulk delete code', 'om flowsheet upload code', 'om flowsheet download code', 'administer om flowsheet', 'om flowsheet generate lab');
}
/* AJAX CALLS 
function om_flowsheet_ajax()
{
	$query_type = arg(3);
	if ($query_type == 'chapter_title')
	{
		$chapter_number = arg(3);
		$preference_id = arg(4);
		//$chapter_q = db_query("SELECT * FROM {om_flowsheet_chapter} WHERE number = %d AND preference_id = %d LIMIT 1", $chapter_number, $preference_id);
		$query = db_select('om_flowsheet_chapter');
		$query->fields('om_flowsheet_chapter');
		$query->condition('number', $chapter_number);
		$query->condition('preference_id', $preference_id);
		$query->range(0, 1);
		$chapter_q = $query->execute();
		if ($chapter_data = $chapter_q->fetchObject())
		{
			echo $chapter_data->name;
			return;
		} //$chapter_data = $chapter_q->fetchObject()
	} //$query_type == 'chapter_title'
	else if ($query_type == 'example_exists')
	{
		$chapter_number = arg(3);
		$preference_id = arg(4);
		$example_number = arg(5);
		$chapter_id = 0;
		$query = db_select('om_flowsheet_chapter');
		$query->fields('om_flowsheet_chapter');
		$query->condition('number', $chapter_number);
		$query->condition('preference_id', $preference_id);
		$query->range(0, 1);
		$chapter_q = $query->execute();
		if (!$chapter_data = $chapter_q->fetchObject())
		{
			echo '';
			return;
		} //!$chapter_data = $chapter_q->fetchObject()
		else
		{
			$chapter_id = $chapter_data->id;
		}
		$query = db_select('om_flowsheet_example');
		$query->fields('om_flowsheet_example');
		$query->condition('chapter_id', $chapter_id);
		$query->condition('number', $example_number);
		$query->range(0, 1);
		$example_q = $query->execute();
		if ($example_data = $example_q->fetchObject())
		{
			if ($example_data->approval_status == 1)
				echo 'Warning! Solution already approved. You cannot upload the same solution again.';
			else
				echo 'Warning! Solution already uploaded. Delete the solution and reupload it.';
			return;
		} //$example_data = $example_q->fetchObject()
	} //$query_type == 'example_exists'
	echo '';
}
/*************************** VALIDATION FUNCTIONS *****************************/
function om_flowsheet_check_valid_filename($file_name)
{
	if (!preg_match('/^[0-9a-zA-Z\.\_]+$/', $file_name))
		return FALSE;
	else if (substr_count($file_name, ".") > 1)
		return FALSE;
	else
		return TRUE;
}
function om_flowsheet_check_name($name = '')
{
	if (!preg_match('/^[0-9a-zA-Z\ ]+$/', $name))
		return FALSE;
	else
		return TRUE;
}
function om_flowsheet_check_code_number($number = '')
{
	if (!preg_match('/^[0-9]+$/', $number))
		return FALSE;
	else
		return TRUE;
}
function om_flowsheet_path()
{
	return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'openmodelica_uploads/om_flowsheet_uploads/';
}
/************************* USER VERIFICATION FUNCTIONS ************************/
function om_flowsheet_get_proposal()
{
	global $user;
	//$proposal_q = db_query("SELECT * FROM {om_flowsheet_proposal} WHERE solution_provider_uid = ".$user->uid." AND solution_status = 2 ORDER BY id DESC LIMIT 1");
	$query = db_select('om_flowsheet_proposal');
	$query->fields('om_flowsheet_proposal');
	$query->condition('uid', $user->uid);
	$query->orderBy('id', 'DESC');
	$query->range(0, 1);
	$proposal_q = $query->execute();
	$proposal_data = $proposal_q->fetchObject();
	if (!$proposal_data)
	{
		drupal_set_message("You do not have any approved om Flowsheet proposal. Please propose the flowsheet proposal", 'error');
		drupal_goto('');
	} //!$proposal_data
	switch ($proposal_data->approval_status)
	{
		case 0:
			drupal_set_message(t('Proposal is awaiting approval.'), 'status');
			return FALSE;
		case 1:
			return $proposal_data;
		case 2:
			drupal_set_message(t('Proposal has been dis-approved.'), 'error');
			return FALSE;
		case 3:
			drupal_set_message(t('Proposal has been marked as completed.'), 'status');
			return FALSE;
		default:
			drupal_set_message(t('Invalid proposal state. Please contact site administrator for further information.'), 'error');
			return FALSE;
	} //$proposal_data->approval_status
	return FALSE;
}
/*************************************************************************/
/***** Function To convert only first charater of string in uppercase ****/
/*************************************************************************/
function om_flowsheet_ucname($string)
{
	$string = ucwords(strtolower($string));
	foreach (array(
		'-',
		'\''
	) as $delimiter)
	{
		if (strpos($string, $delimiter) !== false)
		{
			$string = implode($delimiter, array_map('ucfirst', explode($delimiter, $string)));
		} //strpos($string, $delimiter) !== false
	} //array( '-', '\'' ) as $delimiter
	return $string;
}
function _om_df_sentence_case($string)
{
	$string = ucwords(strtolower($string));
	foreach (array(
		'-',
		'\''
	) as $delimiter)
	{
		if (strpos($string, $delimiter) !== false)
		{
			$string = implode($delimiter, array_map('ucfirst', explode($delimiter, $string)));
		} //strpos($string, $delimiter) !== false
	} //array( '-', '\'' ) as $delimiter
	return $string;
}
function _df_list_of_om_compound()
{
	$om_compound = array();
	$query = db_select('om_flowsheet_compounds_from_om');
	$query->fields('om_flowsheet_compounds_from_om');
	$query->orderBy('id', 'ASC');
	$om_compound_list = $query->execute();
	while ($om_compound_list_data = $om_compound_list->fetchObject())
	{
		$om_compound[$om_compound_list_data->compound] = $om_compound_list_data->compound;
	} //$om_compound_list_data = $om_compound_list->fetchObject()
	return $om_compound;
}
function _df_list_of_unit_operations()
{
	$om_unit_operations = array();
	$query = db_select('om_flowsheet_unit_operations');
	$query->fields('om_flowsheet_unit_operations');
	$query->orderBy('id', 'ASC');
	$om_unit_operations_list = $query->execute();
	while ($om_unit_operations_list_data = $om_unit_operations_list->fetchObject())
	{
		$om_unit_operations[$om_unit_operations_list_data->unit_operations] = $om_unit_operations_list_data->unit_operations;
	} //$om_unit_operations_list_data = $om_unit_operations_list->fetchObject()
	return $om_unit_operations;
}
function _df_list_of_simulator_version_used()
{
	$om_simulator_versions = array();
	$query = db_select('om_flowsheet_library');
	$query->fields('om_flowsheet_library');
	$query->orderBy('id', 'ASC');
	$om_simulator_versions_list = $query->execute();
	while ($om_simulator_versions_list_data = $om_simulator_versions_list->fetchObject())
	{
		$om_simulator_versions[$om_simulator_versions_list_data->simulator_version_name] = $om_simulator_versions_list_data->simulator_version_name;
	} //$om_unit_operations_list_data = $om_unit_operations_list->fetchObject()
	return $om_simulator_versions;
}
function _df_list_of_thermodynamic_packages()
{
	$om_thermodynamic_packages = array();
	$query = db_select('om_flowsheet_thermodynamic_packages');
	$query->fields('om_flowsheet_thermodynamic_packages');
	$query->orderBy('thermodynamic_packages', 'ASC');
	$om_thermodynamic_packages_list = $query->execute();
	while ($om_thermodynamic_packages_list_data = $om_thermodynamic_packages_list->fetchObject())
	{
		$om_thermodynamic_packages[$om_thermodynamic_packages_list_data->thermodynamic_packages] = $om_thermodynamic_packages_list_data->thermodynamic_packages;
	} //$om_thermodynamic_packages_list_data = $om_thermodynamic_packages_list->fetchObject()
	return $om_thermodynamic_packages;
}
function _df_list_of_logical_block()
{
	$om_logical_block = array();
	$query = db_select('om_flowsheet_logical_block');
	$query->fields('om_flowsheet_logical_block');
	$query->orderBy('id', 'ASC');
	$om_logical_block_list = $query->execute();
	while ($om_logical_block_list_data = $om_logical_block_list->fetchObject())
	{
		$om_logical_block[$om_logical_block_list_data->logical_block] = $om_logical_block_list_data->logical_block;
	} //$om_logical_block_list_data = $om_logical_block_list->fetchObject()
	return $om_logical_block;
}
function _om_df_list_of_states()
{
	$states = array(
		0 => '-Select-'
	);
	$query = db_select('list_states_of_india');
	$query->fields('list_states_of_india');
	//$query->orderBy('', '');
	$states_list = $query->execute();
	while ($states_list_data = $states_list->fetchObject())
	{
		$states[$states_list_data->state] = $states_list_data->state;
	} //$states_list_data = $states_list->fetchObject()
	return $states;
}
function _om_df_list_of_cities()
{
	$city = array(
		0 => '-Select-'
	);
	$query = db_select('list_cities_of_india');
	$query->fields('list_cities_of_india');
	$query->orderBy('city', 'ASC');
	$city_list = $query->execute();
	while ($city_list_data = $city_list->fetchObject())
	{
		$city[$city_list_data->city] = $city_list_data->city;
	} //$city_list_data = $city_list->fetchObject()
	return $city;
}
function _om_df_list_of_pincodes()
{
	$pincode = array(
		0 => '-Select-'
	);
	$query = db_select('list_of_all_india_pincode');
	$query->fields('list_of_all_india_pincode');
	$query->orderBy('pincode', 'ASC');
	$pincode_list = $query->execute();
	while ($pincode_list_data = $pincode_list->fetchObject())
	{
		$pincode[$pincode_list_data->pincode] = $pincode_list_data->pincode;
	} //$pincode_list_data = $pincode_list->fetchObject()
	return $pincode;
}
function _om_df_list_of_departments()
{
	$department = array();
	$query = db_select('list_of_departments');
	$query->fields('list_of_departments');
	$query->orderBy('id', 'DESC');
	$department_list = $query->execute();
	while ($department_list_data = $department_list->fetchObject())
	{
		$department[$department_list_data->department] = $department_list_data->department;
	} //$department_list_data = $department_list->fetchObject()
	return $department;
}
function _om_df_list_of_software_version()
{
	$software_version = array();
	$query = db_select('om_flowsheet_version');
	$query->fields('om_flowsheet_version');
	$query->orderBy('id', 'ASC');
	$software_version_list = $query->execute();
	while ($software_version_list_data = $software_version_list->fetchObject())
	{
		$software_version[$software_version_list_data->om_version] = $software_version_list_data->om_version;
	} //$software_version_list_data = $software_version_list->fetchObject()
	return $software_version;
}
function _om_df_dir_name($project, $proposar_name)
{

	$project_title = ucname($project);
	$proposar_name = ucname($proposar_name);
	$dir_name = $project_title . ' By ' . $proposar_name;
	$directory_name = str_replace("__", "_", str_replace(" ", "_", str_replace("/", " ", $dir_name)));
	return $directory_name;
}
function om_flowsheet_document_path()
{
	return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'openmodelica_uploads/om_flowsheet_uploads/';
}
function om_DF_RenameDir($proposal_id, $dir_name)
{
	$proposal_id = $proposal_id;
	$dir_name = $dir_name;
	$query = db_query("SELECT directory_name,id FROM om_flowsheet_proposal WHERE id = :proposal_id", array(
		':proposal_id' => $proposal_id
	));
	$result = $query->fetchObject();
	if ($result != NULL)
	{
		$files = scandir(om_flowsheet_path());
		$files_id_dir = om_flowsheet_path() . $result->id;
		//var_dump($files);die;
		$file_dir = om_flowsheet_path() . $result->directory_name;
		if (is_dir($file_dir))
		{
			$new_directory_name = rename(om_flowsheet_path() . $result->directory_name, om_flowsheet_path() . $dir_name);
			return $new_directory_name;
		} //is_dir($file_dir)
		else if (is_dir($files_id_dir))
		{
			$new_directory_name = rename(om_flowsheet_path() . $result->id, om_flowsheet_path() . $dir_name);
			return $new_directory_name;
		} //is_dir($files_id_dir)
		else
		{
			drupal_set_message('Directory not available for rename.');
			return;
		}
	} //$result != NULL
	else
	{
		drupal_set_message('Project directory name not present in databse');
		return;
	}
	return;
}
function CreateReadmeFileOpenModelicaFlowsheetingProject($proposal_id)
{
	$result = db_query("SELECT * from om_flowsheet_proposal WHERE id = :proposal_id", array(
		":proposal_id" => $proposal_id
	));
	$proposal_data = $result->fetchObject();
	$root_path = om_flowsheet_path();
	$readme_file = fopen($root_path . $proposal_data->directory_name . "/README.txt", "w") or die("Unable to open file!");
	$txt = "";
	$txt .= "About the flowsheet";
	$txt .= "\n" . "\n";
	$txt .= "Title Of The Flowsheet Project: " . $proposal_data->project_title . "\n";
	$txt .= "Proposar Name: " . $proposal_data->name_title . " " . $proposal_data->contributor_name . "\n";
	$txt .= "University: " . $proposal_data->university . "\n";
	$txt .= "\n" . "\n";
	$txt .= "OpenModelica Flowsheet Project By FOSSEE, IIT Bombay" . "\n";
	fwrite($readme_file, $txt);
	fclose($readme_file);
	return $txt;
}
function om_rrmdir_project($prop_id)
{
	$proposal_id = $prop_id;
	$result = db_query("
					SELECT * from om_flowsheet_proposal WHERE id = :proposal_id", array(
		":proposal_id" => $proposal_id
	));
	$proposal_data = $result->fetchObject();
	$root_path = om_flowsheet_document_path();
	$dir = $root_path . $proposal_data->directory_name;
	if ($proposal_data->id == $prop_id)
	{
		if (is_dir($dir))
		{
			$objects = scandir($dir);
			foreach ($objects as $object)
			{
				if ($object != "." && $object != "..")
				{
					if (filetype($dir . "/" . $object) == "dir")
					{
						rrmdir($dir . "/" . $object);
					} //filetype($dir . "/" . $object) == "dir"
					else
					{
						unlink($dir . "/" . $object);
					}
				} //$object != "." && $object != ".."
			} //$objects as $object
			reset($objects);
			rmdir($dir);
			$msg = drupal_set_message("Directory deleted successfully");
			return $msg;
		} //is_dir($dir)
		$msg = drupal_set_message("Directory not present");
		return $msg;
	} //$proposal_data->id == $prop_id
	else
	{
		$msg = drupal_set_message("Data not found");
		return $msg;
	}
}
function om_rrmdir($dir)
{
	if (is_dir($dir))
	{
		$objects = scandir($dir);
		foreach ($objects as $object)
		{
			if ($object != "." && $object != "..")
			{
				if (filetype($dir . "/" . $object) == "dir")
					rrmdir($dir . "/" . $object);
				else
					unlink($dir . "/" . $object);
			} //$object != "." && $object != ".."
		} //$objects as $object
		reset($objects);
		rmdir($dir);
	} //is_dir($dir)
}
function _om_flowsheet_list_of_user_defined_compound($proposal_id)
{
	$data = "";
	//$query = db_select('om_flowsheet_user_defined_compound');
	//$query->fields('om_flowsheet_user_defined_compound');
	//$query->condition('proposal_id', $proposal_id, '=');
	//$query->orderBy('user_defined_compound', 'ASC');
	$user_defined_compound_list = db_query("SELECT * FROM om_flowsheet_user_defined_compound WHERE proposal_id = :proposal_id", array(":proposal_id" => $proposal_id));
	$headers = array(
		"List of user defined compounds used in process flowsheet",
		"CAS No."
	);
	if($user_defined_compound_list){
	$rows = array();
	while ($row = $user_defined_compound_list->fetchObject())
	{
		$item = array(
			"{$row->user_defined_compound}",
			"{$row->cas_no}"
		);
		array_push($rows, $item);
	} //$row = $user_defined_compound_list->fetchObject()
	
	$data .= theme('table', array(
		'header' => $headers,
		'rows' => $rows
	));
	}else{
		$data .= "Not entered";
	}
	return $data;
}
